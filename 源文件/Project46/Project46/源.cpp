#include<stdio.h>
#include <stdlib.h>


typedef struct queue
{
	int n, m, k;
	int a[100];
}date;


void Get_num(date t)
{
	int num = 0;
	for (int i = 0; i < t.n; ++i)
	{
		num += t.a[i] / t.m;
		t.a[i] = t.a[i] % t.m;
		int now = t.m;
		if (i + 1 == t.n)
		{
			num++;
			break;
		}
		while (now > 0)
		{
			if ((now - t.a[i]) > t.k)
			{
				now = now - t.a[i] - t.k;
				//t.a[i + 1] = t.a[i + 1] - (t.m - t.a[i] - t.k);
				i++;
				if (i == t.n)
				{
					num++;
					break;
				}
			}
			else if(now<t.a[i])
			{
				num++;
				--i;
				t.a[i + 1] = t.a[i + 1] - now;
				break;
			}
			else if (now >= t.a[i]&& (now - t.a[i]) <= t.k)
			{
				num++;
				break;
			}
		}
	}
	printf("%d\n",num);
}




int main(void)
{
	date  t[10];
	int T;
	scanf_s("%d",&T);
	for (int i = 0; i < T; ++i)
	{
		scanf_s("%d%d%d",&t[i].n,&t[i].m,&t[i].k);
		for (int j = 0; j < t[i].n;++j)
		{
			scanf_s("%d",&t[i].a[j]);
		}
	}
	for(int i=0;i<T;++i)
	{ 
		Get_num(t[i]);
	}
	return 0;
}





/*
链接：
来源：牛客网

题目描述
X 学校最近计划安排宿管阿姨帮每个宿舍的人晒被子，为了提高效率雇佣了一个无敌阿姨，已知无敌阿姨晒被子的方式如下：
1、进入当前有被子的最低层拿尽可能多的被子，每拿走 1 床被子体力值减 1；
2、如果当前层的被子被拿完且此时的体力值大于 k ，消耗 k 点体力值进入到上层楼；
3、在当前层拿尽可能多的被子，每拿走 1 床被子体力值减 1 ，重复步骤 2；
4、如果体力耗尽或者此时的体力小于等于 k ，将被子拿出去放到晾衣架，体力恢复为初始体力值；
PS：阿姨在没有取得被子之前上楼不消耗体力。
先给出楼的层数 n ，阿姨的体力值 m ，阿姨抱着被子上楼的体力消耗值 k ，每层的被子数 a_ia
i
​
  ，问阿姨需要几次能够把所有被子拿出去？
输入描述:
输入包含多组数据，第一行包含一个数字 T(1 \le T \le 10)T(1≤T≤10)，表示测试数据组数。接下来是T组数据，
每组数据第一行为三个整数 n,m,k(1 \le n,m,k \le 100)n,m,k(1≤n,m,k≤100)分别表示楼的层数，阿姨的体力值以及抱着被子上楼的体力消耗值。
第二行 n 个整数 a_1,a_2,a_3,...,a_n(1 \le a_i \le 100)a
1
​
 ,a
2
​
 ,a
3
​
 ,...,a
n
​
 (1≤a
i
​
 ≤100) 表示每层的被子数。
输出描述:
每组数据输出包含一个整数，表示阿姨把所有的被子都拿出去需要的次数。
示例1
输入
复制
1
4 5 1
1 1 2 4
输出
复制
3
说明
第一次阿姨先从第一层拿一床被子，再上到第二层拿1床被子，再上到第三层拿一床被子，
其中拿被子消耗体力为3，上楼消耗体力为2；第二次阿姨先从第三层拿一床被子，再上到第四层拿三床被子，
其中拿被子消耗体力为4，上楼消耗体力为1；第三次阿姨直接从第四层拿一床被子消耗体力为1，全部为拿被子消耗的体力。

*/